name: Deploy LotoIA to VPS

on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'IAs-Loto/**'
      - 'ias/**'
      - '.github/workflows/deploy-with-ias.yml'
  workflow_dispatch:  # Permite ejecutar manualmente desde la interfaz de GitHub

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Obtener todo el historial para que git describe funcione correctamente

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'npm'

    - name: Deploy to VPS
      uses: appleboy/ssh-action@master
      with:
        host: 212.227.230.103
        username: root
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          echo "=== INICIO DEL DESPLIEGUE ==="
          
          echo "=== Configurando entorno ==="
          export NODE_ENV=production
          export PATH=$PATH:/usr/local/bin:/usr/bin
          
          echo "=== Navegando al directorio del proyecto ==="
          cd /var/www/tienda-web-lotoAI-1
          
          echo "=== Actualizando desde GitHub ==="
          git fetch origin
          git reset --hard origin/main
          git pull origin main
          
          echo "=== Verificando archivos cr√≠ticos ==="
          if [ -f "fix-build.js" ] && [ -f "server.ts" ] && [ -f "nginx.conf" ]; then
            echo "‚úÖ Archivos cr√≠ticos verificados"
          else
            echo "‚ùå Faltan archivos cr√≠ticos"
            exit 1
          fi
          
          echo "=== Verificando archivos CSS ==="
          if [ -f "src/assets/css/bootstrap-fixes.css" ] && [ -f "src/assets/css/mobile-styles.css" ] && [ -f "src/assets/css/container-fixes.css" ]; then
            echo "‚úÖ Archivos CSS encontrados"
            echo "üìã Archivos CSS disponibles:"
            ls -la src/assets/css/
          else
            echo "‚ùå Faltan archivos CSS cr√≠ticos"
            echo "üìã Contenido de src/assets/css/:"
            ls -la src/assets/css/ || echo "Directorio CSS no existe"
            exit 1
          fi
          
          echo "=== Verificando configuraci√≥n angular.json ==="
          if grep -q "bootstrap-fixes.css" angular.json && grep -q "mobile-styles.css" angular.json && grep -q "container-fixes.css" angular.json; then
            echo "‚úÖ Configuraci√≥n CSS en angular.json correcta"
          else
            echo "‚ùå Configuraci√≥n CSS en angular.json incorrecta"
            echo "üìã Configuraci√≥n styles en angular.json:"
            grep -A 10 '"styles"' angular.json || echo "No se encontr√≥ secci√≥n styles"
            exit 1
          fi
          
          echo "=== Actualizando configuraci√≥n NGINX ==="
          sudo cp nginx.conf /etc/nginx/sites-enabled/loto-ia.com
          sudo nginx -t
          echo "‚úÖ Configuraci√≥n NGINX actualizada"
          
          echo "=== Instalaci√≥n de dependencias ==="
          npm install --production=false
          
          echo "=== Compilaci√≥n del proyecto ==="
          npm run build:ssr
          
          echo "=== Verificando archivos compilados ==="
          if [ -f "dist/tienda-web-loto-ai/server/main.server.mjs" ]; then
            echo "‚úÖ Servidor SSR encontrado"
          else
            echo "‚ùå Servidor SSR NO encontrado"
            ls -la dist/tienda-web-loto-ai/server/ || echo "Directorio server no existe"
            exit 1
          fi
          
          if [ -f "dist/tienda-web-loto-ai/browser/index.csr.html" ]; then
            echo "‚úÖ index.csr.html encontrado (creado por fix-build.js)"
          else
            echo "‚ùå index.csr.html NO encontrado"
            ls -la dist/tienda-web-loto-ai/browser/ || echo "Directorio browser no existe"
            exit 1
          fi
          
          echo "=== Compilaci√≥n del backend ==="
          npm run build:backend
          
          echo "=== Configurando PM2 ==="
          pm2 stop all || true
          pm2 delete all || true
          
          echo "=== Iniciando servicios ==="
          pm2 start src/backend/dist/server.js --name "loto-ia-backend" --env production
          pm2 start dist/tienda-web-loto-ai/server/main.server.mjs --name "loto-ia-ssr" --env production
          pm2 save
          
          echo "=== Reiniciando NGINX ==="
          sudo systemctl reload nginx
          echo "‚úÖ NGINX recargado"
          
          echo "=== Verificando servicios ==="
          pm2 list
          
          # Verificar logs del backend si est√° fallando
          echo "=== DIAGN√ìSTICO DE BACKEND ==="
          if pm2 list | grep -q "errored.*loto-ia-backend"; then
            echo "‚ùå Backend en estado de error - Mostrando logs:"
            pm2 logs loto-ia-backend --lines 20 --nostream || true
            echo "=== Verificando archivo del backend ==="
            ls -la src/backend/dist/server.js || echo "‚ùå Archivo del backend no existe"
            echo "=== Verificando dependencias del backend ==="
            cd src/backend && npm list --depth=0 || true
            cd /var/www/tienda-web-lotoAI-1
          fi
          
          # Verificar puertos
          if netstat -tlnp | grep -q ":3001.*LISTEN"; then
            echo "‚úÖ Backend escuchando en puerto 3001"
          else
            echo "‚ùå Backend NO est√° escuchando en puerto 3001"
          fi
          
          if netstat -tlnp | grep -q ":4000.*LISTEN"; then
            echo "‚úÖ SSR escuchando en puerto 4000"
          else
            echo "‚ùå SSR NO est√° escuchando en puerto 4000"
          fi
          
          echo "=== DESPLIEGUE COMPLETADO ==="
          echo "üöÄ Aplicaci√≥n disponible en: https://loto-ia.com"
          echo "==============================================="

    - name: Deployment success notification
      if: success()
      run: |
        echo "::notice::Deployment completed successfully! The application has been deployed to the VPS."

    - name: Deployment failure notification
      if: failure()
      run: |
        echo "::error::Deployment failed! Please check the logs for more information."
