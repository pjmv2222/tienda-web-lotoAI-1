name: Deploy Production (2-Phase)

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'IAs-Loto/**'
      - 'ias/**'
      - '*.md'
      - 'README.md'
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Deploy to Server via SSH
        uses: appleboy/ssh-action@master
        with:
          host: 212.227.230.103
          username: root
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "=== INICIO: DESPLIEGUE CON DIAGN√ìSTICO (v3) ==="

            cd /var/www/tienda-web-lotoAI-1 || exit 1

            echo "--- Fase 1.5: Respaldando archivos de configuraci√≥n ---"
            if [ -f ".env" ]; then cp .env .env.backup; fi
            if [ -f ".env.production" ]; then cp .env.production .env.production.backup; fi
            echo "‚úÖ Backups de configuraci√≥n creados."

            echo "--- Fase 2: Actualizando c√≥digo fuente ---"
            git fetch origin main
            git reset --hard origin/main
            git pull origin main

            echo "--- Fase 2.5: Restaurando archivos de configuraci√≥n ---"
            if [ -f ".env.backup" ]; then mv .env.backup .env; fi
            if [ -f ".env.production.backup" ]; then mv .env.production.backup .env.production; fi
            echo "‚úÖ Archivos de configuraci√≥n restaurados."

            echo "--- Fase 4: Instalando dependencias ---"
            npm install --production=false

            echo "--- Fase 6: Compilando Backend ---"
            cd src/backend
            npm install && npm run build
            cd /var/www/tienda-web-lotoAI-1
            if [ ! -f "src/backend/dist/index.js" ]; then
              echo "‚ùå Error de compilaci√≥n en el Backend. Abortando."
              exit 1
            fi
            echo "‚úÖ Backend compilado."

            echo "--- Fase 7: Compilando Frontend (Build At√≥mico) ---"
            sudo fallocate -l 2G /swapfile || true
            sudo chmod 600 /swapfile || true
            sudo mkswap /swapfile || true
            sudo swapon /swapfile || true
            
            NODE_OPTIONS="--max-old-space-size=4096" npx ng build --configuration=production --output-path=dist_new
            if [ $? -ne 0 ]; then
              echo "‚ùå Error de compilaci√≥n en el Frontend. Abortando."
              sudo swapoff /swapfile && sudo rm /swapfile
              exit 1
            fi
            echo "‚úÖ Frontend compilado en 'dist_new'."
            
            sudo swapoff /swapfile && sudo rm /swapfile

            echo "--- Fase 8: Reemplazo At√≥mico y DIAGN√ìSTICO ---"
            
            if [ -d "dist" ]; then
              rm -rf dist
            fi
            mv dist_new dist
            echo "‚úÖ Nuevo build 'dist_new' renombrado a 'dist'."

            # --- PASO DE DIAGN√ìSTICO --- #
            echo "üîç CONTENIDO DEL DIRECTORIO 'dist' CREADO:"
            ls -lR dist
            # --------------------------- #

            echo "--- Limpiando y reiniciando servicios con PM2 ---"
            pm2 stop all || true
            pm2 delete all || true
            pm2 save --force
            
            echo "--- Iniciando servicios con la nueva configuraci√≥n ---"
            pm2 start ecosystem.config.js --env production
            pm2 save

            echo "--- Fase 8.5: Verificando estado de PM2 ---"
            sleep 8
            pm2 status
            
            echo "--- Fase 9: Actualizando configuraci√≥n de NGINX ---"
            cp nginx.conf /etc/nginx/sites-available/loto-ia.com
            ln -sf /etc/nginx/sites-available/loto-ia.com /etc/nginx/sites-enabled/
            nginx -t && systemctl reload nginx

            echo "‚úÖ FIN: DESPLIEGUE DE DIAGN√ìSTICO COMPLETADO."

      - name: Deployment success notification
        if: success()
        run: |
          echo "::notice::Deployment completed successfully! The application has been deployed to the VPS."

      - name: Deployment failure notification
        if: failure()
        run: |
          echo "::error::Deployment failed! Please check the logs for more information."
