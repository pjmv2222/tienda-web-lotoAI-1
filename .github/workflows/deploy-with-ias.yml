name: Deploy LotoIA with IAs to VPS

on:
  workflow_dispatch:
    inputs:
      confirm_deployment:
        description: 'Confirmar despliegue de IAs (escribir "SI" para confirmar)'
        required: true
        default: 'NO'
        type: string

jobs:
  deploy-ias:
    runs-on: ubuntu-latest

    steps:
    - name: Verificar confirmación de despliegue
      run: |
        if [ "${{ github.event.inputs.confirm_deployment }}" != "SI" ]; then
          echo "❌ Despliegue cancelado. Debe escribir 'SI' para confirmar."
          exit 1
        fi
        echo "✅ Despliegue confirmado. Procediendo..."

    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Deploy IAs to VPS
      uses: appleboy/ssh-action@v0.1.7
      with:
        host: 212.227.230.103
        username: root
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          echo "=== DESPLIEGUE DE IAs (SIN MODELOS GRANDES) ==="
          cd /var/www/tienda-web-lotoAI-1

          echo "Actualizando IAs desde GitHub (excluyendo modelos grandes)..."
          git fetch origin
          
          # Hacer backup de archivos críticos antes del reset
          echo "--- Respaldando archivos críticos ---"
          
          # Respaldar MODELOS de IA (archivos grandes que no están en GitHub)
          echo "--- Respaldando modelos de IA (archivos grandes) ---"
          mkdir -p .backup-models
          cp *.pkl .backup-models/ 2>/dev/null || echo "⚠️ No hay archivos .pkl para respaldar"
          cp *.h5 .backup-models/ 2>/dev/null || echo "⚠️ No hay archivos .h5 para respaldar"
          cp *.joblib .backup-models/ 2>/dev/null || echo "⚠️ No hay archivos .joblib para respaldar"
          cp euromillon_ultra_models.pkl .backup-models/ 2>/dev/null || echo "⚠️ euromillon_ultra_models.pkl no encontrado"
          cp euromillon_transformer.h5 .backup-models/ 2>/dev/null || echo "⚠️ euromillon_transformer.h5 no encontrado"
          ls -la .backup-models/ || echo "Directorio backup vacío"
          
          # Respaldar archivos de configuración
          cp .env .env.backup 2>/dev/null || echo "⚠️ .env no encontrado para backup"
          cp .env.production .env.production.backup 2>/dev/null || echo "⚠️ .env.production no encontrado para backup"
          
          # Respaldar archivos del servidor IA
          cp server-ia-unificado.py server-ia-unificado.py.backup 2>/dev/null || echo "⚠️ server-ia-unificado.py (raíz) no encontrado para backup"
          cp archivos-para-servidor/server-ia-unificado.py archivos-para-servidor/server-ia-unificado.py.backup 2>/dev/null || echo "⚠️ server-ia-unificado.py (archivos-para-servidor) no encontrado para backup"
          
          # Respaldar otros archivos críticos
          cp ia-server-control.sh ia-server-control.sh.backup 2>/dev/null || echo "⚠️ ia-server-control.sh no encontrado para backup"
          cp server/controllers/webhook.controller.js server/controllers/webhook.controller.js.backup 2>/dev/null || echo "⚠️ webhook.controller.js no encontrado para backup"
          
          # Respaldar archivos del scraper
          cp src/assets/botes.json src/assets/botes.json.backup 2>/dev/null || echo "⚠️ botes.json (src) no encontrado para backup"
          cp dist/tienda-web-loto-ai/browser/assets/botes.json dist/tienda-web-loto-ai/browser/assets/botes.json.backup 2>/dev/null || echo "⚠️ botes.json (dist) no encontrado para backup"
          
          echo "--- Actualizando código ---"
          git reset --hard origin/main
          
          echo "--- Restaurando archivos críticos ---"
          
          # Restaurar MODELOS de IA (archivos grandes)
          echo "--- Restaurando modelos de IA (archivos grandes) ---"
          cp .backup-models/*.pkl . 2>/dev/null || echo "⚠️ No hay archivos .pkl para restaurar"
          cp .backup-models/*.h5 . 2>/dev/null || echo "⚠️ No hay archivos .h5 para restaurar"
          cp .backup-models/*.joblib . 2>/dev/null || echo "⚠️ No hay archivos .joblib para restaurar"
          ls -la *.pkl *.h5 *.joblib 2>/dev/null || echo "⚠️ No se encontraron modelos restaurados"
          rm -rf .backup-models
          
          # Restaurar archivos de configuración
          [ -f .env.backup ] && cp .env.backup .env && rm .env.backup && echo "✅ .env restaurado"
          [ -f .env.production.backup ] && cp .env.production.backup .env.production && rm .env.production.backup && echo "✅ .env.production restaurado"
          
          # IMPORTANTE: NO restaurar server-ia-unificado.py porque debe actualizarse desde el repositorio
          echo "--- NOTA: server-ia-unificado.py NO se restaura - debe usar versión actualizada del repositorio ---"
          [ -f server-ia-unificado.py.backup ] && rm server-ia-unificado.py.backup && echo "✅ Backup obsoleto de server-ia-unificado.py eliminado"
          [ -f archivos-para-servidor/server-ia-unificado.py.backup ] && rm archivos-para-servidor/server-ia-unificado.py.backup && echo "✅ Backup obsoleto de server-ia-unificado.py (archivos-para-servidor) eliminado"
          
          # Restaurar otros archivos críticos
          [ -f ia-server-control.sh.backup ] && cp ia-server-control.sh.backup ia-server-control.sh && rm ia-server-control.sh.backup && echo "✅ ia-server-control.sh restaurado"
          [ -f server/controllers/webhook.controller.js.backup ] && cp server/controllers/webhook.controller.js.backup server/controllers/webhook.controller.js && rm server/controllers/webhook.controller.js.backup && echo "✅ webhook.controller.js restaurado"
          
          # Restaurar archivos del scraper
          [ -f src/assets/botes.json.backup ] && cp src/assets/botes.json.backup src/assets/botes.json && rm src/assets/botes.json.backup && echo "✅ botes.json (src) restaurado"
          [ -f dist/tienda-web-loto-ai/browser/assets/botes.json.backup ] && mkdir -p dist/tienda-web-loto-ai/browser/assets/ && cp dist/tienda-web-loto-ai/browser/assets/botes.json.backup dist/tienda-web-loto-ai/browser/assets/botes.json && rm dist/tienda-web-loto-ai/browser/assets/botes.json.backup && echo "✅ botes.json (dist) restaurado"

          echo "--- Reiniciando servidor IA específicamente ---"
          # Reiniciar solo el proceso ia-server para aplicar cambios de IA
          pm2 restart ia-server || echo "⚠️ No se pudo reiniciar ia-server con PM2"
          sleep 3
          pm2 status | grep ia-server || echo "⚠️ ia-server no está en PM2"

          echo "✅ IAs actualizadas correctamente con archivos críticos protegidos"

    - name: Deployment success notification
      if: success()
      run: |
        echo "::notice::IAs deployed successfully!"

    - name: Deployment failure notification
      if: failure()
      run: |
        echo "::error::IAs deployment failed!"