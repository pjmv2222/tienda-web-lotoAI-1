name: Deploy LotoIA with IAs to VPS

on:
  push:
    branches: [ main ]
    paths:
      - 'IAs-Loto/**'
      - 'ias/**'
  workflow_dispatch:

jobs:
  deploy-ias:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Deploy IAs to VPS
      uses: appleboy/ssh-action@master
      with:
        host: 212.227.230.103
        username: root
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          echo "=== DESPLIEGUE DE IAs ==="
          cd /var/www/tienda-web-lotoAI-1

          echo "Actualizando IAs desde GitHub..."
          git fetch origin
          
          # Hacer backup de archivos críticos antes del reset
          cp server-ia-unificado.py server-ia-unificado.py.backup
          cp ia-server-control.sh ia-server-control.sh.backup 2>/dev/null || true
          cp server/controllers/webhook.controller.js server/controllers/webhook.controller.js.backup 2>/dev/null || true
          
          git reset --hard origin/main
          
          # Restaurar archivos críticos si existen backups
          [ -f server-ia-unificado.py.backup ] && cp server-ia-unificado.py.backup server-ia-unificado.py
          [ -f ia-server-control.sh.backup ] && cp ia-server-control.sh.backup ia-server-control.sh
          [ -f server/controllers/webhook.controller.js.backup ] && cp server/controllers/webhook.controller.js.backup server/controllers/webhook.controller.js

          echo "IAs actualizadas correctamente"

    - name: Deployment success notification
      if: success()
      run: |
        echo "::notice::IAs deployed successfully!"

    - name: Deployment failure notification
      if: failure()
      run: |
        echo "::error::IAs deployment failed!"